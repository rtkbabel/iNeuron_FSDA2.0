use warehouse demo_warehouse;
use database demo_database;

CREATE OR REPLACE TABLE Sales_data_final
 (order_id VARCHAR(20),
  order_date DATE,
  ship_date DATE,
  ship_mode VARCHAR(30),
  customer_name VARCHAR(40),
  segment VARCHAR(20),
  state VARCHAR(60),
  country VARCHAR(70),
  market VARCHAR(10),
  region VARCHAR(30),
  product_id VARCHAR(30),
  category VARCHAR(30),
  sub_category VARCHAR(20),
  product_name STRING,
  sales VARCHAR(30),
  quantity NUMBER(5),
  discount NUMBER(10,5),
  profit NUMBER(10,5),
  shipping_cost NUMBER(10,5),
  order_priority STRING,
  year varchar(5)
);

DESCRIBE TABLE SALES_DATA_FINAL;
SELECT * FROM SALES_DATA_FINAL;

SELECT SUM(SALES) from SALES_DATA_FINAL;

--1. SET PRIMARY KEY & Create a Copy of the table so the original file will remain intact
CREATE OR REPLACE TABLE SALES_DATA_FINAL_COPY AS
SELECT * FROM SALES_DATA_FINAL;

DESCRIBE TABLE SALES_DATA_FINAL_COPY;
SELECT * FROM SALES_DATA_FINAL_COPY LIMIT 10;

-- Adding Primary key
ALTER TABLE SALES_DATA_FINAL_COPY
ADD PRIMARY KEY (order_id);

--3. Extract The LAST NUMBER AFTER THE - AND CREATE OTHER COLUMN AND UPDATE IT
ALTER TABLE SALES_DATA_FINAL_COPY
ADD COLUMN id_number NUMBER (10,0);

UPDATE SALES_DATA_FINAL_COPY
SET id_number = SPLIT_PART(ORDER_ID,'-',-1);

--4. FLAG, IF DISCOUNT IS GREATER THEN 0 THEN  YES ELSE FALSE AND PUT IT IN NEW COLUMN FOR EVERY ORDER ID.
ALTER TABLE SALES_DATA_FINAL_COPY
ADD COLUMN DISCOUNT_FLAG CHAR(5);

UPDATE SALES_DATA_FINAL_COPY
SET DISCOUNT_FLAG = CASE WHEN DISCOUNT > 0 THEN 'Yes'
                              ELSE 'No' END;

--6.  FIND OUT HOW MUCH DAYS TAKEN FOR EACH ORDER TO PROCESS FOR THE SHIPMENT FOR EVERY ORDER ID?
ALTER TABLE SALES_DATA_FINAL_COPY
ADD COLUMN PROCESS_DAYS NUMBER (25,0);

UPDATE SALES_DATA_FINAL_COPY
SET PROCESS_DAYS = TO_DATE(SHIP_DATE) - TO_DATE(ORDER_DATE);

--7. . FLAG THE PROCESS DAY BY RATING
            --IF IT TAKES LESS OR EQUAL 3 DAYS MAKE 5,
            --LESS OR EQUAL THAN 6 DAYS BUT MORE THAN 3 MAKE 4,
            --LESS THAN 10 BUT MORE THAN 6 MAKE 3, MORE THAN 10 MAKE IT 2 FOR EVERY ORDER ID.

ALTER TABLE SALES_DATA_FINAL_COPY
ADD COLUMN RATING INT;

UPDATE SALES_DATA_FINAL_COPY
SET RATING = CASE WHEN PROCESS_DAYS <= 3 THEN 5
                  WHEN PROCESS_DAYS > 3 AND PROCESS_DAYS <=6 THEN 4
                  WHEN PROCESS_DAYS > 6 AND PROCESS_DAYS <=10 THEN 3
                  ELSE 2 END;

SELECT * FROM SALES_DATA_FINAL_COPY;


